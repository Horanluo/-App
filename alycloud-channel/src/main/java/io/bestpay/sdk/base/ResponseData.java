/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

/**
 * @Copyright 2016 www.bestpay.io Inc. All rights reserved.
 */

package io.bestpay.sdk.base;

import org.apache.avro.specific.SpecificData;

import org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@SuppressWarnings("all")
/** API返回的数据 */
@javax.xml.bind.annotation.XmlRootElement
@javax.xml.bind.annotation.XmlAccessorType(javax.xml.bind.annotation.XmlAccessType.FIELD)
@javax.xml.bind.annotation.XmlType(name="ResponseData", namespace="io.bestpay.sdk.base")
@org.apache.avro.specific.AvroGenerated
public class ResponseData extends io.bestpay.framework.base.SpecificRecordBase implements io.bestpay.framework.base.SpecificRecord {
  private static final long serialVersionUID = -6993452862211399055L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ResponseData\",\"namespace\":\"io.bestpay.sdk.base\",\"doc\":\"API返回的数据\",\"fields\":[{\"name\":\"app_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"应用id\"},{\"name\":\"sign_type\",\"type\":{\"type\":\"enum\",\"name\":\"SignType\",\"symbols\":[\"HMAC\",\"DES\",\"RSA\"]},\"doc\":\"签名类型\",\"default\":\"HMAC\"},{\"name\":\"server_trans_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"服务端流水号\",\"default\":\"\"},{\"name\":\"client_trans_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"客户端流水号\"},{\"name\":\"trans_timestamp\",\"type\":\"long\",\"doc\":\"时间截\"},{\"name\":\"data\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"请求返回的数据\",\"default\":\"\"},{\"name\":\"resp_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"错误编码\",\"default\":\"000000\"},{\"name\":\"resp_msg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"错误信息\",\"default\":\"请求成功\"},{\"name\":\"sign\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"签名\",\"default\":\"\"}],\"aliases\":[\"ResponseData\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 应用id */
  @javax.xml.bind.annotation.XmlElement(name="app_id")
  private java.lang.String app_id;
  /** 签名类型 */
  @javax.xml.bind.annotation.XmlElement(name="sign_type")
  private io.bestpay.sdk.base.SignType sign_type;
  /** 服务端流水号 */
  @javax.xml.bind.annotation.XmlElement(name="server_trans_id")
  private java.lang.String server_trans_id;
  /** 客户端流水号 */
  @javax.xml.bind.annotation.XmlElement(name="client_trans_id")
  private java.lang.String client_trans_id;
  /** 时间截 */
  @javax.xml.bind.annotation.XmlElement(name="trans_timestamp")
  private java.lang.Long trans_timestamp;
  /** 请求返回的数据 */
  @javax.xml.bind.annotation.XmlElement(name="data")
  private java.lang.String data;
  /** 错误编码 */
  @javax.xml.bind.annotation.XmlElement(name="resp_code")
  private java.lang.String resp_code;
  /** 错误信息 */
  @javax.xml.bind.annotation.XmlElement(name="resp_msg")
  private java.lang.String resp_msg;
  /** 签名 */
  @javax.xml.bind.annotation.XmlElement(name="sign")
  private java.lang.String sign;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ResponseData() {}

  /**
   * All-args constructor.
   * @param app_id 应用id
   * @param sign_type 签名类型
   * @param server_trans_id 服务端流水号
   * @param client_trans_id 客户端流水号
   * @param trans_timestamp 时间截
   * @param data 请求返回的数据
   * @param resp_code 错误编码
   * @param resp_msg 错误信息
   * @param sign 签名
   */
  public ResponseData(java.lang.String app_id, io.bestpay.sdk.base.SignType sign_type, java.lang.String server_trans_id, java.lang.String client_trans_id, java.lang.Long trans_timestamp, java.lang.String data, java.lang.String resp_code, java.lang.String resp_msg, java.lang.String sign) {
    this.app_id = app_id;
    this.sign_type = sign_type;
    this.server_trans_id = server_trans_id;
    this.client_trans_id = client_trans_id;
    this.trans_timestamp = trans_timestamp;
    this.data = data;
    this.resp_code = resp_code;
    this.resp_msg = resp_msg;
    this.sign = sign;
  }

  @com.fasterxml.jackson.annotation.JsonIgnore
  @org.codehaus.jackson.annotate.JsonIgnore
  @javax.xml.bind.annotation.XmlTransient
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return app_id;
    case 1: return sign_type;
    case 2: return server_trans_id;
    case 3: return client_trans_id;
    case 4: return trans_timestamp;
    case 5: return data;
    case 6: return resp_code;
    case 7: return resp_msg;
    case 8: return sign;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: app_id = (java.lang.String)value$; break;
    case 1: sign_type = (io.bestpay.sdk.base.SignType)value$; break;
    case 2: server_trans_id = (java.lang.String)value$; break;
    case 3: client_trans_id = (java.lang.String)value$; break;
    case 4: trans_timestamp = (java.lang.Long)value$; break;
    case 5: data = (java.lang.String)value$; break;
    case 6: resp_code = (java.lang.String)value$; break;
    case 7: resp_msg = (java.lang.String)value$; break;
    case 8: sign = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'app_id' field.
   * @return 应用id
   */
  @com.fasterxml.jackson.annotation.JsonGetter("app_id")
  @org.codehaus.jackson.annotate.JsonProperty("app_id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getAppId() {
    return app_id;
  }

  /**
   * Sets the value of the 'app_id' field.
   * 应用id
   * @param value the value to set.
   */
  protected void setAppId(java.lang.String value) {
    this.app_id = value;
  }

  /**
   * Gets the value of the 'sign_type' field.
   * @return 签名类型
   */
  @com.fasterxml.jackson.annotation.JsonGetter("sign_type")
  @org.codehaus.jackson.annotate.JsonProperty("sign_type")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public io.bestpay.sdk.base.SignType getSignType() {
    return sign_type;
  }

  /**
   * Sets the value of the 'sign_type' field.
   * 签名类型
   * @param value the value to set.
   */
  protected void setSignType(io.bestpay.sdk.base.SignType value) {
    this.sign_type = value;
  }

  /**
   * Gets the value of the 'server_trans_id' field.
   * @return 服务端流水号
   */
  @com.fasterxml.jackson.annotation.JsonGetter("server_trans_id")
  @org.codehaus.jackson.annotate.JsonProperty("server_trans_id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getServerTransId() {
    return server_trans_id;
  }

  /**
   * Sets the value of the 'server_trans_id' field.
   * 服务端流水号
   * @param value the value to set.
   */
  protected void setServerTransId(java.lang.String value) {
    this.server_trans_id = value;
  }

  /**
   * Gets the value of the 'client_trans_id' field.
   * @return 客户端流水号
   */
  @com.fasterxml.jackson.annotation.JsonGetter("client_trans_id")
  @org.codehaus.jackson.annotate.JsonProperty("client_trans_id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getClientTransId() {
    return client_trans_id;
  }

  /**
   * Sets the value of the 'client_trans_id' field.
   * 客户端流水号
   * @param value the value to set.
   */
  protected void setClientTransId(java.lang.String value) {
    this.client_trans_id = value;
  }

  /**
   * Gets the value of the 'trans_timestamp' field.
   * @return 时间截
   */
  @com.fasterxml.jackson.annotation.JsonGetter("trans_timestamp")
  @org.codehaus.jackson.annotate.JsonProperty("trans_timestamp")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Long getTransTimestamp() {
    return trans_timestamp;
  }

  /**
   * Sets the value of the 'trans_timestamp' field.
   * 时间截
   * @param value the value to set.
   */
  protected void setTransTimestamp(java.lang.Long value) {
    this.trans_timestamp = value;
  }

  /**
   * Gets the value of the 'data' field.
   * @return 请求返回的数据
   */
  @com.fasterxml.jackson.annotation.JsonGetter("data")
  @org.codehaus.jackson.annotate.JsonProperty("data")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * 请求返回的数据
   * @param value the value to set.
   */
  protected void setData(java.lang.String value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'resp_code' field.
   * @return 错误编码
   */
  @com.fasterxml.jackson.annotation.JsonGetter("resp_code")
  @org.codehaus.jackson.annotate.JsonProperty("resp_code")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getRespCode() {
    return resp_code;
  }

  /**
   * Sets the value of the 'resp_code' field.
   * 错误编码
   * @param value the value to set.
   */
  protected void setRespCode(java.lang.String value) {
    this.resp_code = value;
  }

  /**
   * Gets the value of the 'resp_msg' field.
   * @return 错误信息
   */
  @com.fasterxml.jackson.annotation.JsonGetter("resp_msg")
  @org.codehaus.jackson.annotate.JsonProperty("resp_msg")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getRespMsg() {
    return resp_msg;
  }

  /**
   * Sets the value of the 'resp_msg' field.
   * 错误信息
   * @param value the value to set.
   */
  protected void setRespMsg(java.lang.String value) {
    this.resp_msg = value;
  }

  /**
   * Gets the value of the 'sign' field.
   * @return 签名
   */
  @com.fasterxml.jackson.annotation.JsonGetter("sign")
  @org.codehaus.jackson.annotate.JsonProperty("sign")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getSign() {
    return sign;
  }

  /**
   * Sets the value of the 'sign' field.
   * 签名
   * @param value the value to set.
   */
  protected void setSign(java.lang.String value) {
    this.sign = value;
  }

  /**
   * Creates a new ResponseData RecordBuilder.
   * @return A new ResponseData RecordBuilder
   */
  public static io.bestpay.sdk.base.ResponseData.Builder newBuilder() {
    return new io.bestpay.sdk.base.ResponseData.Builder();
  }

  /**
   * Creates a new ResponseData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ResponseData RecordBuilder
   */
  public static io.bestpay.sdk.base.ResponseData.Builder newBuilder(io.bestpay.sdk.base.ResponseData.Builder other) {
    return new io.bestpay.sdk.base.ResponseData.Builder(other);
  }

  /**
   * Creates a new ResponseData RecordBuilder by copying an existing ResponseData instance.
   * @param other The existing instance to copy.
   * @return A new ResponseData RecordBuilder
   */
  public static io.bestpay.sdk.base.ResponseData.Builder newBuilder(io.bestpay.sdk.base.ResponseData other) {
    return new io.bestpay.sdk.base.ResponseData.Builder(other);
  }

  /**
   * RecordBuilder for ResponseData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ResponseData>
    implements org.apache.avro.data.RecordBuilder<ResponseData> {

    /** 应用id */
    private java.lang.String app_id;
    /** 签名类型 */
    private io.bestpay.sdk.base.SignType sign_type;
    /** 服务端流水号 */
    private java.lang.String server_trans_id;
    /** 客户端流水号 */
    private java.lang.String client_trans_id;
    /** 时间截 */
    private java.lang.Long trans_timestamp;
    /** 请求返回的数据 */
    private java.lang.String data;
    /** 错误编码 */
    private java.lang.String resp_code;
    /** 错误信息 */
    private java.lang.String resp_msg;
    /** 签名 */
    private java.lang.String sign;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.bestpay.sdk.base.ResponseData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.app_id)) {
        this.app_id = data().deepCopy(fields()[0].schema(), other.app_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sign_type)) {
        this.sign_type = data().deepCopy(fields()[1].schema(), other.sign_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.server_trans_id)) {
        this.server_trans_id = data().deepCopy(fields()[2].schema(), other.server_trans_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.client_trans_id)) {
        this.client_trans_id = data().deepCopy(fields()[3].schema(), other.client_trans_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.trans_timestamp)) {
        this.trans_timestamp = data().deepCopy(fields()[4].schema(), other.trans_timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.data)) {
        this.data = data().deepCopy(fields()[5].schema(), other.data);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.resp_code)) {
        this.resp_code = data().deepCopy(fields()[6].schema(), other.resp_code);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.resp_msg)) {
        this.resp_msg = data().deepCopy(fields()[7].schema(), other.resp_msg);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sign)) {
        this.sign = data().deepCopy(fields()[8].schema(), other.sign);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ResponseData instance
     * @param other The existing instance to copy.
     */
    private Builder(io.bestpay.sdk.base.ResponseData other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.app_id)) {
        this.app_id = data().deepCopy(fields()[0].schema(), other.app_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sign_type)) {
        this.sign_type = data().deepCopy(fields()[1].schema(), other.sign_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.server_trans_id)) {
        this.server_trans_id = data().deepCopy(fields()[2].schema(), other.server_trans_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.client_trans_id)) {
        this.client_trans_id = data().deepCopy(fields()[3].schema(), other.client_trans_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.trans_timestamp)) {
        this.trans_timestamp = data().deepCopy(fields()[4].schema(), other.trans_timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.data)) {
        this.data = data().deepCopy(fields()[5].schema(), other.data);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.resp_code)) {
        this.resp_code = data().deepCopy(fields()[6].schema(), other.resp_code);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.resp_msg)) {
        this.resp_msg = data().deepCopy(fields()[7].schema(), other.resp_msg);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sign)) {
        this.sign = data().deepCopy(fields()[8].schema(), other.sign);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'app_id' field.
      * 应用id
      * @return The value.
      */
    public java.lang.String getAppId() {
      return app_id;
    }

    /**
      * Sets the value of the 'app_id' field.
      * 应用id
      * @param value The value of 'app_id'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setAppId(java.lang.String value) {
      validate(fields()[0], value);
      this.app_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'app_id' field has been set.
      * 应用id
      * @return True if the 'app_id' field has been set, false otherwise.
      */
    public boolean hasAppId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'app_id' field.
      * 应用id
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearAppId() {
      app_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sign_type' field.
      * 签名类型
      * @return The value.
      */
    public io.bestpay.sdk.base.SignType getSignType() {
      return sign_type;
    }

    /**
      * Sets the value of the 'sign_type' field.
      * 签名类型
      * @param value The value of 'sign_type'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setSignType(io.bestpay.sdk.base.SignType value) {
      validate(fields()[1], value);
      this.sign_type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sign_type' field has been set.
      * 签名类型
      * @return True if the 'sign_type' field has been set, false otherwise.
      */
    public boolean hasSignType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sign_type' field.
      * 签名类型
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearSignType() {
      sign_type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'server_trans_id' field.
      * 服务端流水号
      * @return The value.
      */
    public java.lang.String getServerTransId() {
      return server_trans_id;
    }

    /**
      * Sets the value of the 'server_trans_id' field.
      * 服务端流水号
      * @param value The value of 'server_trans_id'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setServerTransId(java.lang.String value) {
      validate(fields()[2], value);
      this.server_trans_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'server_trans_id' field has been set.
      * 服务端流水号
      * @return True if the 'server_trans_id' field has been set, false otherwise.
      */
    public boolean hasServerTransId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'server_trans_id' field.
      * 服务端流水号
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearServerTransId() {
      server_trans_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'client_trans_id' field.
      * 客户端流水号
      * @return The value.
      */
    public java.lang.String getClientTransId() {
      return client_trans_id;
    }

    /**
      * Sets the value of the 'client_trans_id' field.
      * 客户端流水号
      * @param value The value of 'client_trans_id'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setClientTransId(java.lang.String value) {
      validate(fields()[3], value);
      this.client_trans_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'client_trans_id' field has been set.
      * 客户端流水号
      * @return True if the 'client_trans_id' field has been set, false otherwise.
      */
    public boolean hasClientTransId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'client_trans_id' field.
      * 客户端流水号
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearClientTransId() {
      client_trans_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'trans_timestamp' field.
      * 时间截
      * @return The value.
      */
    public java.lang.Long getTransTimestamp() {
      return trans_timestamp;
    }

    /**
      * Sets the value of the 'trans_timestamp' field.
      * 时间截
      * @param value The value of 'trans_timestamp'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setTransTimestamp(java.lang.Long value) {
      validate(fields()[4], value);
      this.trans_timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'trans_timestamp' field has been set.
      * 时间截
      * @return True if the 'trans_timestamp' field has been set, false otherwise.
      */
    public boolean hasTransTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'trans_timestamp' field.
      * 时间截
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearTransTimestamp() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'data' field.
      * 请求返回的数据
      * @return The value.
      */
    public java.lang.String getData() {
      return data;
    }

    /**
      * Sets the value of the 'data' field.
      * 请求返回的数据
      * @param value The value of 'data'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setData(java.lang.String value) {
      validate(fields()[5], value);
      this.data = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * 请求返回的数据
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'data' field.
      * 请求返回的数据
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearData() {
      data = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'resp_code' field.
      * 错误编码
      * @return The value.
      */
    public java.lang.String getRespCode() {
      return resp_code;
    }

    /**
      * Sets the value of the 'resp_code' field.
      * 错误编码
      * @param value The value of 'resp_code'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setRespCode(java.lang.String value) {
      validate(fields()[6], value);
      this.resp_code = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'resp_code' field has been set.
      * 错误编码
      * @return True if the 'resp_code' field has been set, false otherwise.
      */
    public boolean hasRespCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'resp_code' field.
      * 错误编码
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearRespCode() {
      resp_code = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'resp_msg' field.
      * 错误信息
      * @return The value.
      */
    public java.lang.String getRespMsg() {
      return resp_msg;
    }

    /**
      * Sets the value of the 'resp_msg' field.
      * 错误信息
      * @param value The value of 'resp_msg'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setRespMsg(java.lang.String value) {
      validate(fields()[7], value);
      this.resp_msg = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'resp_msg' field has been set.
      * 错误信息
      * @return True if the 'resp_msg' field has been set, false otherwise.
      */
    public boolean hasRespMsg() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'resp_msg' field.
      * 错误信息
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearRespMsg() {
      resp_msg = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'sign' field.
      * 签名
      * @return The value.
      */
    public java.lang.String getSign() {
      return sign;
    }

    /**
      * Sets the value of the 'sign' field.
      * 签名
      * @param value The value of 'sign'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder setSign(java.lang.String value) {
      validate(fields()[8], value);
      this.sign = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'sign' field has been set.
      * 签名
      * @return True if the 'sign' field has been set, false otherwise.
      */
    public boolean hasSign() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'sign' field.
      * 签名
      * @return This builder.
      */
    public io.bestpay.sdk.base.ResponseData.Builder clearSign() {
      sign = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public ResponseData build() {
      try {
        ResponseData record = new ResponseData();
        record.app_id = fieldSetFlags()[0] ? this.app_id : (java.lang.String) defaultValue(fields()[0]);
        record.sign_type = fieldSetFlags()[1] ? this.sign_type : (io.bestpay.sdk.base.SignType) defaultValue(fields()[1]);
        record.server_trans_id = fieldSetFlags()[2] ? this.server_trans_id : (java.lang.String) defaultValue(fields()[2]);
        record.client_trans_id = fieldSetFlags()[3] ? this.client_trans_id : (java.lang.String) defaultValue(fields()[3]);
        record.trans_timestamp = fieldSetFlags()[4] ? this.trans_timestamp : (java.lang.Long) defaultValue(fields()[4]);
        record.data = fieldSetFlags()[5] ? this.data : (java.lang.String) defaultValue(fields()[5]);
        record.resp_code = fieldSetFlags()[6] ? this.resp_code : (java.lang.String) defaultValue(fields()[6]);
        record.resp_msg = fieldSetFlags()[7] ? this.resp_msg : (java.lang.String) defaultValue(fields()[7]);
        record.sign = fieldSetFlags()[8] ? this.sign : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
