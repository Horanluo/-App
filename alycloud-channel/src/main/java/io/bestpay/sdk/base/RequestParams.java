/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

/**
 * @Copyright 2016 www.bestpay.io Inc. All rights reserved.
 */

package io.bestpay.sdk.base;

import org.apache.avro.specific.SpecificData;

import org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@SuppressWarnings("all")
/** API请求的数据 */
@javax.xml.bind.annotation.XmlRootElement
@javax.xml.bind.annotation.XmlAccessorType(javax.xml.bind.annotation.XmlAccessType.FIELD)
@javax.xml.bind.annotation.XmlType(name="RequestParams", namespace="io.bestpay.sdk.base")
@org.apache.avro.specific.AvroGenerated
public class RequestParams extends io.bestpay.framework.base.SpecificRecordBase implements io.bestpay.framework.base.SpecificRecord {
  private static final long serialVersionUID = 8848981866212588868L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RequestParams\",\"namespace\":\"io.bestpay.sdk.base\",\"doc\":\"API请求的数据\",\"fields\":[{\"name\":\"merchant_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"商户号\"},{\"name\":\"sign_type\",\"type\":{\"type\":\"enum\",\"name\":\"SignType\",\"symbols\":[\"HMAC\",\"DES\",\"RSA\"]},\"doc\":\"签名类型\"},{\"name\":\"trans_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"流水id\"},{\"name\":\"trans_timestamp\",\"type\":\"long\",\"doc\":\"时间截\"}],\"aliases\":[\"RequestParams\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 商户号 */
  @javax.xml.bind.annotation.XmlElement(name="merchant_id")
  private java.lang.String merchant_id;
  /** 签名类型 */
  @javax.xml.bind.annotation.XmlElement(name="sign_type")
  private io.bestpay.sdk.base.SignType sign_type;
  /** 流水id */
  @javax.xml.bind.annotation.XmlElement(name="trans_id")
  private java.lang.String trans_id;
  /** 时间截 */
  @javax.xml.bind.annotation.XmlElement(name="trans_timestamp")
  private long trans_timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RequestParams() {}

  /**
   * All-args constructor.
   * @param merchant_id 商户号
   * @param sign_type 签名类型
   * @param trans_id 流水id
   * @param trans_timestamp 时间截
   */
  public RequestParams(java.lang.String merchant_id, io.bestpay.sdk.base.SignType sign_type, java.lang.String trans_id, java.lang.Long trans_timestamp) {
    this.merchant_id = merchant_id;
    this.sign_type = sign_type;
    this.trans_id = trans_id;
    this.trans_timestamp = trans_timestamp;
  }

  @com.fasterxml.jackson.annotation.JsonIgnore
  @org.codehaus.jackson.annotate.JsonIgnore
  @javax.xml.bind.annotation.XmlTransient
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return merchant_id;
    case 1: return sign_type;
    case 2: return trans_id;
    case 3: return trans_timestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: merchant_id = (java.lang.String)value$; break;
    case 1: sign_type = (io.bestpay.sdk.base.SignType)value$; break;
    case 2: trans_id = (java.lang.String)value$; break;
    case 3: trans_timestamp = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'merchant_id' field.
   * @return 商户号
   */
  @com.fasterxml.jackson.annotation.JsonGetter("merchant_id")
  @org.codehaus.jackson.annotate.JsonProperty("merchant_id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getMerchantId() {
    return merchant_id;
  }

  /**
   * Sets the value of the 'merchant_id' field.
   * 商户号
   * @param value the value to set.
   */
  protected void setMerchantId(java.lang.String value) {
    this.merchant_id = value;
  }

  /**
   * Gets the value of the 'sign_type' field.
   * @return 签名类型
   */
  @com.fasterxml.jackson.annotation.JsonGetter("sign_type")
  @org.codehaus.jackson.annotate.JsonProperty("sign_type")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public io.bestpay.sdk.base.SignType getSignType() {
    return sign_type;
  }

  /**
   * Sets the value of the 'sign_type' field.
   * 签名类型
   * @param value the value to set.
   */
  protected void setSignType(io.bestpay.sdk.base.SignType value) {
    this.sign_type = value;
  }

  /**
   * Gets the value of the 'trans_id' field.
   * @return 流水id
   */
  @com.fasterxml.jackson.annotation.JsonGetter("trans_id")
  @org.codehaus.jackson.annotate.JsonProperty("trans_id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getTransId() {
    return trans_id;
  }

  /**
   * Sets the value of the 'trans_id' field.
   * 流水id
   * @param value the value to set.
   */
  protected void setTransId(java.lang.String value) {
    this.trans_id = value;
  }

  /**
   * Gets the value of the 'trans_timestamp' field.
   * @return 时间截
   */
  @com.fasterxml.jackson.annotation.JsonGetter("trans_timestamp")
  @org.codehaus.jackson.annotate.JsonProperty("trans_timestamp")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Long getTransTimestamp() {
    return trans_timestamp;
  }

  /**
   * Sets the value of the 'trans_timestamp' field.
   * 时间截
   * @param value the value to set.
   */
  protected void setTransTimestamp(java.lang.Long value) {
    this.trans_timestamp = value;
  }

  /**
   * Creates a new RequestParams RecordBuilder.
   * @return A new RequestParams RecordBuilder
   */
  public static io.bestpay.sdk.base.RequestParams.Builder newBuilder() {
    return new io.bestpay.sdk.base.RequestParams.Builder();
  }

  /**
   * Creates a new RequestParams RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RequestParams RecordBuilder
   */
  public static io.bestpay.sdk.base.RequestParams.Builder newBuilder(io.bestpay.sdk.base.RequestParams.Builder other) {
    return new io.bestpay.sdk.base.RequestParams.Builder(other);
  }

  /**
   * Creates a new RequestParams RecordBuilder by copying an existing RequestParams instance.
   * @param other The existing instance to copy.
   * @return A new RequestParams RecordBuilder
   */
  public static io.bestpay.sdk.base.RequestParams.Builder newBuilder(io.bestpay.sdk.base.RequestParams other) {
    return new io.bestpay.sdk.base.RequestParams.Builder(other);
  }

  /**
   * RecordBuilder for RequestParams instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RequestParams>
    implements org.apache.avro.data.RecordBuilder<RequestParams> {

    /** 商户号 */
    private java.lang.String merchant_id;
    /** 签名类型 */
    private io.bestpay.sdk.base.SignType sign_type;
    /** 流水id */
    private java.lang.String trans_id;
    /** 时间截 */
    private long trans_timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.bestpay.sdk.base.RequestParams.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.merchant_id)) {
        this.merchant_id = data().deepCopy(fields()[0].schema(), other.merchant_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sign_type)) {
        this.sign_type = data().deepCopy(fields()[1].schema(), other.sign_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.trans_id)) {
        this.trans_id = data().deepCopy(fields()[2].schema(), other.trans_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.trans_timestamp)) {
        this.trans_timestamp = data().deepCopy(fields()[3].schema(), other.trans_timestamp);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing RequestParams instance
     * @param other The existing instance to copy.
     */
    private Builder(io.bestpay.sdk.base.RequestParams other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.merchant_id)) {
        this.merchant_id = data().deepCopy(fields()[0].schema(), other.merchant_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sign_type)) {
        this.sign_type = data().deepCopy(fields()[1].schema(), other.sign_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.trans_id)) {
        this.trans_id = data().deepCopy(fields()[2].schema(), other.trans_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.trans_timestamp)) {
        this.trans_timestamp = data().deepCopy(fields()[3].schema(), other.trans_timestamp);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'merchant_id' field.
      * 商户号
      * @return The value.
      */
    public java.lang.String getMerchantId() {
      return merchant_id;
    }

    /**
      * Sets the value of the 'merchant_id' field.
      * 商户号
      * @param value The value of 'merchant_id'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder setMerchantId(java.lang.String value) {
      validate(fields()[0], value);
      this.merchant_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'merchant_id' field has been set.
      * 商户号
      * @return True if the 'merchant_id' field has been set, false otherwise.
      */
    public boolean hasMerchantId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'merchant_id' field.
      * 商户号
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder clearMerchantId() {
      merchant_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sign_type' field.
      * 签名类型
      * @return The value.
      */
    public io.bestpay.sdk.base.SignType getSignType() {
      return sign_type;
    }

    /**
      * Sets the value of the 'sign_type' field.
      * 签名类型
      * @param value The value of 'sign_type'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder setSignType(io.bestpay.sdk.base.SignType value) {
      validate(fields()[1], value);
      this.sign_type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sign_type' field has been set.
      * 签名类型
      * @return True if the 'sign_type' field has been set, false otherwise.
      */
    public boolean hasSignType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sign_type' field.
      * 签名类型
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder clearSignType() {
      sign_type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'trans_id' field.
      * 流水id
      * @return The value.
      */
    public java.lang.String getTransId() {
      return trans_id;
    }

    /**
      * Sets the value of the 'trans_id' field.
      * 流水id
      * @param value The value of 'trans_id'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder setTransId(java.lang.String value) {
      validate(fields()[2], value);
      this.trans_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'trans_id' field has been set.
      * 流水id
      * @return True if the 'trans_id' field has been set, false otherwise.
      */
    public boolean hasTransId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'trans_id' field.
      * 流水id
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder clearTransId() {
      trans_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'trans_timestamp' field.
      * 时间截
      * @return The value.
      */
    public java.lang.Long getTransTimestamp() {
      return trans_timestamp;
    }

    /**
      * Sets the value of the 'trans_timestamp' field.
      * 时间截
      * @param value The value of 'trans_timestamp'.
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder setTransTimestamp(long value) {
      validate(fields()[3], value);
      this.trans_timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'trans_timestamp' field has been set.
      * 时间截
      * @return True if the 'trans_timestamp' field has been set, false otherwise.
      */
    public boolean hasTransTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'trans_timestamp' field.
      * 时间截
      * @return This builder.
      */
    public io.bestpay.sdk.base.RequestParams.Builder clearTransTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public RequestParams build() {
      try {
        RequestParams record = new RequestParams();
        record.merchant_id = fieldSetFlags()[0] ? this.merchant_id : (java.lang.String) defaultValue(fields()[0]);
        record.sign_type = fieldSetFlags()[1] ? this.sign_type : (io.bestpay.sdk.base.SignType) defaultValue(fields()[1]);
        record.trans_id = fieldSetFlags()[2] ? this.trans_id : (java.lang.String) defaultValue(fields()[2]);
        record.trans_timestamp = fieldSetFlags()[3] ? this.trans_timestamp : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
