/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

/**
 * @Copyright 2016 www.bestpay.io Inc. All rights reserved.
 */

package io.bestpay.framework.resource;

import org.apache.avro.specific.SpecificData;

import org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@SuppressWarnings("all")
/** ID生成对像 */
@javax.xml.bind.annotation.XmlRootElement
@javax.xml.bind.annotation.XmlAccessorType(javax.xml.bind.annotation.XmlAccessType.FIELD)
@javax.xml.bind.annotation.XmlType(name="IdGenerate", namespace="io.bestpay.framework.resource")
@org.apache.avro.specific.AvroGenerated
public class IdGenerate extends io.bestpay.framework.base.SpecificRecordBase implements io.bestpay.framework.base.SpecificRecord {
  private static final long serialVersionUID = 2470665726793901814L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IdGenerate\",\"namespace\":\"io.bestpay.framework.resource\",\"doc\":\"ID生成对像\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"主键\",\"default\":\"\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"名称\",\"default\":\"\"},{\"name\":\"id_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"类型\",\"default\":\"\"},{\"name\":\"id_version\",\"type\":\"long\",\"doc\":\"版本号\",\"default\":1},{\"name\":\"id_value\",\"type\":\"long\",\"doc\":\"id当前值\",\"default\":1}],\"aliases\":[\"IdGenerate\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 主键 */
  @javax.xml.bind.annotation.XmlElement(name="id")
  private java.lang.String id;
  /** 名称 */
  @javax.xml.bind.annotation.XmlElement(name="name")
  private java.lang.String name;
  /** 类型 */
  @javax.xml.bind.annotation.XmlElement(name="id_type")
  private java.lang.String id_type;
  /** 版本号 */
  @javax.xml.bind.annotation.XmlElement(name="id_version")
  private long id_version;
  /** id当前值 */
  @javax.xml.bind.annotation.XmlElement(name="id_value")
  private long id_value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public IdGenerate() {}

  /**
   * All-args constructor.
   * @param id 主键
   * @param name 名称
   * @param id_type 类型
   * @param id_version 版本号
   * @param id_value id当前值
   */
  public IdGenerate(java.lang.String id, java.lang.String name, java.lang.String id_type, java.lang.Long id_version, java.lang.Long id_value) {
    this.id = id;
    this.name = name;
    this.id_type = id_type;
    this.id_version = id_version;
    this.id_value = id_value;
  }

  @com.fasterxml.jackson.annotation.JsonIgnore
  @org.codehaus.jackson.annotate.JsonIgnore
  @javax.xml.bind.annotation.XmlTransient
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return id_type;
    case 3: return id_version;
    case 4: return id_value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: id_type = (java.lang.String)value$; break;
    case 3: id_version = (java.lang.Long)value$; break;
    case 4: id_value = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return 主键
   */
  @com.fasterxml.jackson.annotation.JsonGetter("id")
  @org.codehaus.jackson.annotate.JsonProperty("id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * 主键
   * @param value the value to set.
   */
  protected void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return 名称
   */
  @com.fasterxml.jackson.annotation.JsonGetter("name")
  @org.codehaus.jackson.annotate.JsonProperty("name")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * 名称
   * @param value the value to set.
   */
  protected void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'id_type' field.
   * @return 类型
   */
  @com.fasterxml.jackson.annotation.JsonGetter("id_type")
  @org.codehaus.jackson.annotate.JsonProperty("id_type")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getIdType() {
    return id_type;
  }

  /**
   * Sets the value of the 'id_type' field.
   * 类型
   * @param value the value to set.
   */
  protected void setIdType(java.lang.String value) {
    this.id_type = value;
  }

  /**
   * Gets the value of the 'id_version' field.
   * @return 版本号
   */
  @com.fasterxml.jackson.annotation.JsonGetter("id_version")
  @org.codehaus.jackson.annotate.JsonProperty("id_version")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Long getIdVersion() {
    return id_version;
  }

  /**
   * Sets the value of the 'id_version' field.
   * 版本号
   * @param value the value to set.
   */
  protected void setIdVersion(java.lang.Long value) {
    this.id_version = value;
  }

  /**
   * Gets the value of the 'id_value' field.
   * @return id当前值
   */
  @com.fasterxml.jackson.annotation.JsonGetter("id_value")
  @org.codehaus.jackson.annotate.JsonProperty("id_value")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Long getIdValue() {
    return id_value;
  }

  /**
   * Sets the value of the 'id_value' field.
   * id当前值
   * @param value the value to set.
   */
  protected void setIdValue(java.lang.Long value) {
    this.id_value = value;
  }

  /**
   * Creates a new IdGenerate RecordBuilder.
   * @return A new IdGenerate RecordBuilder
   */
  public static io.bestpay.framework.resource.IdGenerate.Builder newBuilder() {
    return new io.bestpay.framework.resource.IdGenerate.Builder();
  }

  /**
   * Creates a new IdGenerate RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new IdGenerate RecordBuilder
   */
  public static io.bestpay.framework.resource.IdGenerate.Builder newBuilder(io.bestpay.framework.resource.IdGenerate.Builder other) {
    return new io.bestpay.framework.resource.IdGenerate.Builder(other);
  }

  /**
   * Creates a new IdGenerate RecordBuilder by copying an existing IdGenerate instance.
   * @param other The existing instance to copy.
   * @return A new IdGenerate RecordBuilder
   */
  public static io.bestpay.framework.resource.IdGenerate.Builder newBuilder(io.bestpay.framework.resource.IdGenerate other) {
    return new io.bestpay.framework.resource.IdGenerate.Builder(other);
  }

  /**
   * RecordBuilder for IdGenerate instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IdGenerate>
    implements org.apache.avro.data.RecordBuilder<IdGenerate> {

    /** 主键 */
    private java.lang.String id;
    /** 名称 */
    private java.lang.String name;
    /** 类型 */
    private java.lang.String id_type;
    /** 版本号 */
    private long id_version;
    /** id当前值 */
    private long id_value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.bestpay.framework.resource.IdGenerate.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id_type)) {
        this.id_type = data().deepCopy(fields()[2].schema(), other.id_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id_version)) {
        this.id_version = data().deepCopy(fields()[3].schema(), other.id_version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.id_value)) {
        this.id_value = data().deepCopy(fields()[4].schema(), other.id_value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing IdGenerate instance
     * @param other The existing instance to copy.
     */
    private Builder(io.bestpay.framework.resource.IdGenerate other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id_type)) {
        this.id_type = data().deepCopy(fields()[2].schema(), other.id_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id_version)) {
        this.id_version = data().deepCopy(fields()[3].schema(), other.id_version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.id_value)) {
        this.id_value = data().deepCopy(fields()[4].schema(), other.id_value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * 主键
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * 主键
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * 主键
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * 主键
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * 名称
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * 名称
      * @param value The value of 'name'.
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * 名称
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * 名称
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'id_type' field.
      * 类型
      * @return The value.
      */
    public java.lang.String getIdType() {
      return id_type;
    }

    /**
      * Sets the value of the 'id_type' field.
      * 类型
      * @param value The value of 'id_type'.
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder setIdType(java.lang.String value) {
      validate(fields()[2], value);
      this.id_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'id_type' field has been set.
      * 类型
      * @return True if the 'id_type' field has been set, false otherwise.
      */
    public boolean hasIdType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'id_type' field.
      * 类型
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder clearIdType() {
      id_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'id_version' field.
      * 版本号
      * @return The value.
      */
    public java.lang.Long getIdVersion() {
      return id_version;
    }

    /**
      * Sets the value of the 'id_version' field.
      * 版本号
      * @param value The value of 'id_version'.
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder setIdVersion(long value) {
      validate(fields()[3], value);
      this.id_version = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'id_version' field has been set.
      * 版本号
      * @return True if the 'id_version' field has been set, false otherwise.
      */
    public boolean hasIdVersion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'id_version' field.
      * 版本号
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder clearIdVersion() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'id_value' field.
      * id当前值
      * @return The value.
      */
    public java.lang.Long getIdValue() {
      return id_value;
    }

    /**
      * Sets the value of the 'id_value' field.
      * id当前值
      * @param value The value of 'id_value'.
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder setIdValue(long value) {
      validate(fields()[4], value);
      this.id_value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'id_value' field has been set.
      * id当前值
      * @return True if the 'id_value' field has been set, false otherwise.
      */
    public boolean hasIdValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'id_value' field.
      * id当前值
      * @return This builder.
      */
    public io.bestpay.framework.resource.IdGenerate.Builder clearIdValue() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public IdGenerate build() {
      try {
        IdGenerate record = new IdGenerate();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.id_type = fieldSetFlags()[2] ? this.id_type : (java.lang.String) defaultValue(fields()[2]);
        record.id_version = fieldSetFlags()[3] ? this.id_version : (java.lang.Long) defaultValue(fields()[3]);
        record.id_value = fieldSetFlags()[4] ? this.id_value : (java.lang.Long) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
