/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

/**
 * @Copyright 2016 www.bestpay.io Inc. All rights reserved.
 */

package io.bestpay.framework.base;

import org.apache.avro.specific.SpecificData;

import org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@SuppressWarnings("all")
/** 树模型 */
@javax.xml.bind.annotation.XmlRootElement
@javax.xml.bind.annotation.XmlAccessorType(javax.xml.bind.annotation.XmlAccessType.FIELD)
@javax.xml.bind.annotation.XmlType(name="Tree", namespace="io.bestpay.framework.base")
@org.apache.avro.specific.AvroGenerated
public class Tree extends io.bestpay.framework.base.SpecificRecordBase implements io.bestpay.framework.base.SpecificRecord {
  private static final long serialVersionUID = -2418504026572376008L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tree\",\"namespace\":\"io.bestpay.framework.base\",\"doc\":\"树模型\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"text\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"名称\"},{\"name\":\"leaf\",\"type\":\"boolean\",\"doc\":\"是否子节点\",\"default\":false},{\"name\":\"expanded\",\"type\":\"boolean\",\"doc\":\"是否展开\",\"default\":false},{\"name\":\"show_in_menu\",\"type\":\"boolean\",\"doc\":\"是否显示\",\"default\":true},{\"name\":\"viewClass\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"视图类\",\"default\":\"\"},{\"name\":\"sequence\",\"type\":\"long\",\"doc\":\"排序\",\"default\":\"0\"}],\"aliases\":[\"Tree\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /**  */
  @javax.xml.bind.annotation.XmlElement(name="id")
  private java.lang.String id;
  /** 名称 */
  @javax.xml.bind.annotation.XmlElement(name="text")
  private java.lang.String text;
  /** 是否子节点 */
  @javax.xml.bind.annotation.XmlElement(name="leaf")
  private java.lang.Boolean leaf;
  /** 是否展开 */
  @javax.xml.bind.annotation.XmlElement(name="expanded")
  private java.lang.Boolean expanded;
  /** 是否显示 */
  @javax.xml.bind.annotation.XmlElement(name="show_in_menu")
  private java.lang.Boolean show_in_menu;
  /** 视图类 */
  @javax.xml.bind.annotation.XmlElement(name="viewClass")
  private java.lang.String viewClass;
  /** 排序 */
  @javax.xml.bind.annotation.XmlElement(name="sequence")
  private java.lang.Long sequence;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Tree() {}

  /**
   * All-args constructor.
   * @param id 
   * @param text 名称
   * @param leaf 是否子节点
   * @param expanded 是否展开
   * @param show_in_menu 是否显示
   * @param viewClass 视图类
   * @param sequence 排序
   */
  public Tree(java.lang.String id, java.lang.String text, java.lang.Boolean leaf, java.lang.Boolean expanded, java.lang.Boolean show_in_menu, java.lang.String viewClass, java.lang.Long sequence) {
    this.id = id;
    this.text = text;
    this.leaf = leaf;
    this.expanded = expanded;
    this.show_in_menu = show_in_menu;
    this.viewClass = viewClass;
    this.sequence = sequence;
  }

  @com.fasterxml.jackson.annotation.JsonIgnore
  @org.codehaus.jackson.annotate.JsonIgnore
  @javax.xml.bind.annotation.XmlTransient
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return text;
    case 2: return leaf;
    case 3: return expanded;
    case 4: return show_in_menu;
    case 5: return viewClass;
    case 6: return sequence;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: text = (java.lang.String)value$; break;
    case 2: leaf = (java.lang.Boolean)value$; break;
    case 3: expanded = (java.lang.Boolean)value$; break;
    case 4: show_in_menu = (java.lang.Boolean)value$; break;
    case 5: viewClass = (java.lang.String)value$; break;
    case 6: sequence = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return 
   */
  @com.fasterxml.jackson.annotation.JsonGetter("id")
  @org.codehaus.jackson.annotate.JsonProperty("id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * 
   * @param value the value to set.
   */
  protected void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'text' field.
   * @return 名称
   */
  @com.fasterxml.jackson.annotation.JsonGetter("text")
  @org.codehaus.jackson.annotate.JsonProperty("text")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getText() {
    return text;
  }

  /**
   * Sets the value of the 'text' field.
   * 名称
   * @param value the value to set.
   */
  protected void setText(java.lang.String value) {
    this.text = value;
  }

  /**
   * Gets the value of the 'leaf' field.
   * @return 是否子节点
   */
  @com.fasterxml.jackson.annotation.JsonGetter("leaf")
  @org.codehaus.jackson.annotate.JsonProperty("leaf")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Boolean getLeaf() {
    return leaf;
  }

  /**
   * Sets the value of the 'leaf' field.
   * 是否子节点
   * @param value the value to set.
   */
  protected void setLeaf(java.lang.Boolean value) {
    this.leaf = value;
  }

  /**
   * Gets the value of the 'expanded' field.
   * @return 是否展开
   */
  @com.fasterxml.jackson.annotation.JsonGetter("expanded")
  @org.codehaus.jackson.annotate.JsonProperty("expanded")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Boolean getExpanded() {
    return expanded;
  }

  /**
   * Sets the value of the 'expanded' field.
   * 是否展开
   * @param value the value to set.
   */
  protected void setExpanded(java.lang.Boolean value) {
    this.expanded = value;
  }

  /**
   * Gets the value of the 'show_in_menu' field.
   * @return 是否显示
   */
  @com.fasterxml.jackson.annotation.JsonGetter("show_in_menu")
  @org.codehaus.jackson.annotate.JsonProperty("show_in_menu")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Boolean getShowInMenu() {
    return show_in_menu;
  }

  /**
   * Sets the value of the 'show_in_menu' field.
   * 是否显示
   * @param value the value to set.
   */
  protected void setShowInMenu(java.lang.Boolean value) {
    this.show_in_menu = value;
  }

  /**
   * Gets the value of the 'viewClass' field.
   * @return 视图类
   */
  @com.fasterxml.jackson.annotation.JsonGetter("viewClass")
  @org.codehaus.jackson.annotate.JsonProperty("viewClass")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getViewClass() {
    return viewClass;
  }

  /**
   * Sets the value of the 'viewClass' field.
   * 视图类
   * @param value the value to set.
   */
  protected void setViewClass(java.lang.String value) {
    this.viewClass = value;
  }

  /**
   * Gets the value of the 'sequence' field.
   * @return 排序
   */
  @com.fasterxml.jackson.annotation.JsonGetter("sequence")
  @org.codehaus.jackson.annotate.JsonProperty("sequence")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.Long getSequence() {
    return sequence;
  }

  /**
   * Sets the value of the 'sequence' field.
   * 排序
   * @param value the value to set.
   */
  protected void setSequence(java.lang.Long value) {
    this.sequence = value;
  }

  /**
   * Creates a new Tree RecordBuilder.
   * @return A new Tree RecordBuilder
   */
  public static io.bestpay.framework.base.Tree.Builder newBuilder() {
    return new io.bestpay.framework.base.Tree.Builder();
  }

  /**
   * Creates a new Tree RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Tree RecordBuilder
   */
  public static io.bestpay.framework.base.Tree.Builder newBuilder(io.bestpay.framework.base.Tree.Builder other) {
    return new io.bestpay.framework.base.Tree.Builder(other);
  }

  /**
   * Creates a new Tree RecordBuilder by copying an existing Tree instance.
   * @param other The existing instance to copy.
   * @return A new Tree RecordBuilder
   */
  public static io.bestpay.framework.base.Tree.Builder newBuilder(io.bestpay.framework.base.Tree other) {
    return new io.bestpay.framework.base.Tree.Builder(other);
  }

  /**
   * RecordBuilder for Tree instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tree>
    implements org.apache.avro.data.RecordBuilder<Tree> {

    /**  */
    private java.lang.String id;
    /** 名称 */
    private java.lang.String text;
    /** 是否子节点 */
    private java.lang.Boolean leaf;
    /** 是否展开 */
    private java.lang.Boolean expanded;
    /** 是否显示 */
    private java.lang.Boolean show_in_menu;
    /** 视图类 */
    private java.lang.String viewClass;
    /** 排序 */
    private java.lang.Long sequence;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.bestpay.framework.base.Tree.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.text)) {
        this.text = data().deepCopy(fields()[1].schema(), other.text);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.leaf)) {
        this.leaf = data().deepCopy(fields()[2].schema(), other.leaf);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.expanded)) {
        this.expanded = data().deepCopy(fields()[3].schema(), other.expanded);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.show_in_menu)) {
        this.show_in_menu = data().deepCopy(fields()[4].schema(), other.show_in_menu);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.viewClass)) {
        this.viewClass = data().deepCopy(fields()[5].schema(), other.viewClass);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sequence)) {
        this.sequence = data().deepCopy(fields()[6].schema(), other.sequence);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Tree instance
     * @param other The existing instance to copy.
     */
    private Builder(io.bestpay.framework.base.Tree other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.text)) {
        this.text = data().deepCopy(fields()[1].schema(), other.text);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.leaf)) {
        this.leaf = data().deepCopy(fields()[2].schema(), other.leaf);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.expanded)) {
        this.expanded = data().deepCopy(fields()[3].schema(), other.expanded);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.show_in_menu)) {
        this.show_in_menu = data().deepCopy(fields()[4].schema(), other.show_in_menu);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.viewClass)) {
        this.viewClass = data().deepCopy(fields()[5].schema(), other.viewClass);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sequence)) {
        this.sequence = data().deepCopy(fields()[6].schema(), other.sequence);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * 
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * 
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * 
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * 
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * 名称
      * @return The value.
      */
    public java.lang.String getText() {
      return text;
    }

    /**
      * Sets the value of the 'text' field.
      * 名称
      * @param value The value of 'text'.
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder setText(java.lang.String value) {
      validate(fields()[1], value);
      this.text = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'text' field has been set.
      * 名称
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'text' field.
      * 名称
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder clearText() {
      text = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'leaf' field.
      * 是否子节点
      * @return The value.
      */
    public java.lang.Boolean getLeaf() {
      return leaf;
    }

    /**
      * Sets the value of the 'leaf' field.
      * 是否子节点
      * @param value The value of 'leaf'.
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder setLeaf(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.leaf = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'leaf' field has been set.
      * 是否子节点
      * @return True if the 'leaf' field has been set, false otherwise.
      */
    public boolean hasLeaf() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'leaf' field.
      * 是否子节点
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder clearLeaf() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'expanded' field.
      * 是否展开
      * @return The value.
      */
    public java.lang.Boolean getExpanded() {
      return expanded;
    }

    /**
      * Sets the value of the 'expanded' field.
      * 是否展开
      * @param value The value of 'expanded'.
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder setExpanded(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.expanded = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'expanded' field has been set.
      * 是否展开
      * @return True if the 'expanded' field has been set, false otherwise.
      */
    public boolean hasExpanded() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'expanded' field.
      * 是否展开
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder clearExpanded() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'show_in_menu' field.
      * 是否显示
      * @return The value.
      */
    public java.lang.Boolean getShowInMenu() {
      return show_in_menu;
    }

    /**
      * Sets the value of the 'show_in_menu' field.
      * 是否显示
      * @param value The value of 'show_in_menu'.
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder setShowInMenu(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.show_in_menu = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'show_in_menu' field has been set.
      * 是否显示
      * @return True if the 'show_in_menu' field has been set, false otherwise.
      */
    public boolean hasShowInMenu() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'show_in_menu' field.
      * 是否显示
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder clearShowInMenu() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'viewClass' field.
      * 视图类
      * @return The value.
      */
    public java.lang.String getViewClass() {
      return viewClass;
    }

    /**
      * Sets the value of the 'viewClass' field.
      * 视图类
      * @param value The value of 'viewClass'.
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder setViewClass(java.lang.String value) {
      validate(fields()[5], value);
      this.viewClass = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'viewClass' field has been set.
      * 视图类
      * @return True if the 'viewClass' field has been set, false otherwise.
      */
    public boolean hasViewClass() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'viewClass' field.
      * 视图类
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder clearViewClass() {
      viewClass = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sequence' field.
      * 排序
      * @return The value.
      */
    public java.lang.Long getSequence() {
      return sequence;
    }

    /**
      * Sets the value of the 'sequence' field.
      * 排序
      * @param value The value of 'sequence'.
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder setSequence(java.lang.Long value) {
      validate(fields()[6], value);
      this.sequence = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sequence' field has been set.
      * 排序
      * @return True if the 'sequence' field has been set, false otherwise.
      */
    public boolean hasSequence() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sequence' field.
      * 排序
      * @return This builder.
      */
    public io.bestpay.framework.base.Tree.Builder clearSequence() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Tree build() {
      try {
        Tree record = new Tree();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.text = fieldSetFlags()[1] ? this.text : (java.lang.String) defaultValue(fields()[1]);
        record.leaf = fieldSetFlags()[2] ? this.leaf : (java.lang.Boolean) defaultValue(fields()[2]);
        record.expanded = fieldSetFlags()[3] ? this.expanded : (java.lang.Boolean) defaultValue(fields()[3]);
        record.show_in_menu = fieldSetFlags()[4] ? this.show_in_menu : (java.lang.Boolean) defaultValue(fields()[4]);
        record.viewClass = fieldSetFlags()[5] ? this.viewClass : (java.lang.String) defaultValue(fields()[5]);
        record.sequence = fieldSetFlags()[6] ? this.sequence : (java.lang.Long) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
