/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

/**
 * @Copyright 2016 www.bestpay.io Inc. All rights reserved.
 */

package io.bestpay.framework.base;

import org.apache.avro.specific.SpecificData;

import org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@SuppressWarnings("all")
/** 用户 */
@javax.xml.bind.annotation.XmlRootElement
@javax.xml.bind.annotation.XmlAccessorType(javax.xml.bind.annotation.XmlAccessType.FIELD)
@javax.xml.bind.annotation.XmlType(name="User", namespace="io.bestpay.framework.base")
@org.apache.avro.specific.AvroGenerated
public class User extends io.bestpay.framework.base.SpecificRecordBase implements io.bestpay.framework.base.SpecificRecord {
  private static final long serialVersionUID = 8407891638635914326L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User\",\"namespace\":\"io.bestpay.framework.base\",\"doc\":\"用户\",\"fields\":[{\"name\":\"username\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"用户名\",\"default\":\"\"},{\"name\":\"token\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"令牌\",\"default\":\"\"},{\"name\":\"client_ip\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"客户端ip\",\"default\":\"\"},{\"name\":\"family_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"姓名\",\"default\":\"\"},{\"name\":\"id_card\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"身份证\",\"default\":\"\"},{\"name\":\"mobile\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"手机\",\"default\":\"\"},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"邮箱\",\"default\":\"\"},{\"name\":\"dept_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"部门\",\"default\":\"\"},{\"name\":\"org_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"机构id\",\"default\":\"\"}],\"aliases\":[\"User\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 用户名 */
  @javax.xml.bind.annotation.XmlElement(name="username")
  private java.lang.String username;
  /** 令牌 */
  @javax.xml.bind.annotation.XmlElement(name="token")
  private java.lang.String token;
  /** 客户端ip */
  @javax.xml.bind.annotation.XmlElement(name="client_ip")
  private java.lang.String client_ip;
  /** 姓名 */
  @javax.xml.bind.annotation.XmlElement(name="family_name")
  private java.lang.String family_name;
  /** 身份证 */
  @javax.xml.bind.annotation.XmlElement(name="id_card")
  private java.lang.String id_card;
  /** 手机 */
  @javax.xml.bind.annotation.XmlElement(name="mobile")
  private java.lang.String mobile;
  /** 邮箱 */
  @javax.xml.bind.annotation.XmlElement(name="email")
  private java.lang.String email;
  /** 部门 */
  @javax.xml.bind.annotation.XmlElement(name="dept_name")
  private java.lang.String dept_name;
  /** 机构id */
  @javax.xml.bind.annotation.XmlElement(name="org_id")
  private java.lang.String org_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public User() {}

  /**
   * All-args constructor.
   * @param username 用户名
   * @param token 令牌
   * @param client_ip 客户端ip
   * @param family_name 姓名
   * @param id_card 身份证
   * @param mobile 手机
   * @param email 邮箱
   * @param dept_name 部门
   * @param org_id 机构id
   */
  public User(java.lang.String username, java.lang.String token, java.lang.String client_ip, java.lang.String family_name, java.lang.String id_card, java.lang.String mobile, java.lang.String email, java.lang.String dept_name, java.lang.String org_id) {
    this.username = username;
    this.token = token;
    this.client_ip = client_ip;
    this.family_name = family_name;
    this.id_card = id_card;
    this.mobile = mobile;
    this.email = email;
    this.dept_name = dept_name;
    this.org_id = org_id;
  }

  @com.fasterxml.jackson.annotation.JsonIgnore
  @org.codehaus.jackson.annotate.JsonIgnore
  @javax.xml.bind.annotation.XmlTransient
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return username;
    case 1: return token;
    case 2: return client_ip;
    case 3: return family_name;
    case 4: return id_card;
    case 5: return mobile;
    case 6: return email;
    case 7: return dept_name;
    case 8: return org_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: username = (java.lang.String)value$; break;
    case 1: token = (java.lang.String)value$; break;
    case 2: client_ip = (java.lang.String)value$; break;
    case 3: family_name = (java.lang.String)value$; break;
    case 4: id_card = (java.lang.String)value$; break;
    case 5: mobile = (java.lang.String)value$; break;
    case 6: email = (java.lang.String)value$; break;
    case 7: dept_name = (java.lang.String)value$; break;
    case 8: org_id = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'username' field.
   * @return 用户名
   */
  @com.fasterxml.jackson.annotation.JsonGetter("username")
  @org.codehaus.jackson.annotate.JsonProperty("username")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * Sets the value of the 'username' field.
   * 用户名
   * @param value the value to set.
   */
  protected void setUsername(java.lang.String value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'token' field.
   * @return 令牌
   */
  @com.fasterxml.jackson.annotation.JsonGetter("token")
  @org.codehaus.jackson.annotate.JsonProperty("token")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getToken() {
    return token;
  }

  /**
   * Sets the value of the 'token' field.
   * 令牌
   * @param value the value to set.
   */
  protected void setToken(java.lang.String value) {
    this.token = value;
  }

  /**
   * Gets the value of the 'client_ip' field.
   * @return 客户端ip
   */
  @com.fasterxml.jackson.annotation.JsonGetter("client_ip")
  @org.codehaus.jackson.annotate.JsonProperty("client_ip")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getClientIp() {
    return client_ip;
  }

  /**
   * Sets the value of the 'client_ip' field.
   * 客户端ip
   * @param value the value to set.
   */
  protected void setClientIp(java.lang.String value) {
    this.client_ip = value;
  }

  /**
   * Gets the value of the 'family_name' field.
   * @return 姓名
   */
  @com.fasterxml.jackson.annotation.JsonGetter("family_name")
  @org.codehaus.jackson.annotate.JsonProperty("family_name")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getFamilyName() {
    return family_name;
  }

  /**
   * Sets the value of the 'family_name' field.
   * 姓名
   * @param value the value to set.
   */
  protected void setFamilyName(java.lang.String value) {
    this.family_name = value;
  }

  /**
   * Gets the value of the 'id_card' field.
   * @return 身份证
   */
  @com.fasterxml.jackson.annotation.JsonGetter("id_card")
  @org.codehaus.jackson.annotate.JsonProperty("id_card")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getIdCard() {
    return id_card;
  }

  /**
   * Sets the value of the 'id_card' field.
   * 身份证
   * @param value the value to set.
   */
  protected void setIdCard(java.lang.String value) {
    this.id_card = value;
  }

  /**
   * Gets the value of the 'mobile' field.
   * @return 手机
   */
  @com.fasterxml.jackson.annotation.JsonGetter("mobile")
  @org.codehaus.jackson.annotate.JsonProperty("mobile")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getMobile() {
    return mobile;
  }

  /**
   * Sets the value of the 'mobile' field.
   * 手机
   * @param value the value to set.
   */
  protected void setMobile(java.lang.String value) {
    this.mobile = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return 邮箱
   */
  @com.fasterxml.jackson.annotation.JsonGetter("email")
  @org.codehaus.jackson.annotate.JsonProperty("email")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * 邮箱
   * @param value the value to set.
   */
  protected void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'dept_name' field.
   * @return 部门
   */
  @com.fasterxml.jackson.annotation.JsonGetter("dept_name")
  @org.codehaus.jackson.annotate.JsonProperty("dept_name")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getDeptName() {
    return dept_name;
  }

  /**
   * Sets the value of the 'dept_name' field.
   * 部门
   * @param value the value to set.
   */
  protected void setDeptName(java.lang.String value) {
    this.dept_name = value;
  }

  /**
   * Gets the value of the 'org_id' field.
   * @return 机构id
   */
  @com.fasterxml.jackson.annotation.JsonGetter("org_id")
  @org.codehaus.jackson.annotate.JsonProperty("org_id")   
  @com.fasterxml.jackson.annotation.JsonInclude(Include.NON_NULL)
  @org.codehaus.jackson.map.annotate.JsonSerialize(include=Inclusion.NON_NULL)  
  @javax.xml.bind.annotation.XmlTransient
  public java.lang.String getOrgId() {
    return org_id;
  }

  /**
   * Sets the value of the 'org_id' field.
   * 机构id
   * @param value the value to set.
   */
  protected void setOrgId(java.lang.String value) {
    this.org_id = value;
  }

  /**
   * Creates a new User RecordBuilder.
   * @return A new User RecordBuilder
   */
  public static io.bestpay.framework.base.User.Builder newBuilder() {
    return new io.bestpay.framework.base.User.Builder();
  }

  /**
   * Creates a new User RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new User RecordBuilder
   */
  public static io.bestpay.framework.base.User.Builder newBuilder(io.bestpay.framework.base.User.Builder other) {
    return new io.bestpay.framework.base.User.Builder(other);
  }

  /**
   * Creates a new User RecordBuilder by copying an existing User instance.
   * @param other The existing instance to copy.
   * @return A new User RecordBuilder
   */
  public static io.bestpay.framework.base.User.Builder newBuilder(io.bestpay.framework.base.User other) {
    return new io.bestpay.framework.base.User.Builder(other);
  }

  /**
   * RecordBuilder for User instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<User>
    implements org.apache.avro.data.RecordBuilder<User> {

    /** 用户名 */
    private java.lang.String username;
    /** 令牌 */
    private java.lang.String token;
    /** 客户端ip */
    private java.lang.String client_ip;
    /** 姓名 */
    private java.lang.String family_name;
    /** 身份证 */
    private java.lang.String id_card;
    /** 手机 */
    private java.lang.String mobile;
    /** 邮箱 */
    private java.lang.String email;
    /** 部门 */
    private java.lang.String dept_name;
    /** 机构id */
    private java.lang.String org_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.bestpay.framework.base.User.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.username)) {
        this.username = data().deepCopy(fields()[0].schema(), other.username);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.token)) {
        this.token = data().deepCopy(fields()[1].schema(), other.token);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.client_ip)) {
        this.client_ip = data().deepCopy(fields()[2].schema(), other.client_ip);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.family_name)) {
        this.family_name = data().deepCopy(fields()[3].schema(), other.family_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.id_card)) {
        this.id_card = data().deepCopy(fields()[4].schema(), other.id_card);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mobile)) {
        this.mobile = data().deepCopy(fields()[5].schema(), other.mobile);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.email)) {
        this.email = data().deepCopy(fields()[6].schema(), other.email);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.dept_name)) {
        this.dept_name = data().deepCopy(fields()[7].schema(), other.dept_name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.org_id)) {
        this.org_id = data().deepCopy(fields()[8].schema(), other.org_id);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing User instance
     * @param other The existing instance to copy.
     */
    private Builder(io.bestpay.framework.base.User other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.username)) {
        this.username = data().deepCopy(fields()[0].schema(), other.username);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.token)) {
        this.token = data().deepCopy(fields()[1].schema(), other.token);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.client_ip)) {
        this.client_ip = data().deepCopy(fields()[2].schema(), other.client_ip);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.family_name)) {
        this.family_name = data().deepCopy(fields()[3].schema(), other.family_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.id_card)) {
        this.id_card = data().deepCopy(fields()[4].schema(), other.id_card);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mobile)) {
        this.mobile = data().deepCopy(fields()[5].schema(), other.mobile);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.email)) {
        this.email = data().deepCopy(fields()[6].schema(), other.email);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.dept_name)) {
        this.dept_name = data().deepCopy(fields()[7].schema(), other.dept_name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.org_id)) {
        this.org_id = data().deepCopy(fields()[8].schema(), other.org_id);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'username' field.
      * 用户名
      * @return The value.
      */
    public java.lang.String getUsername() {
      return username;
    }

    /**
      * Sets the value of the 'username' field.
      * 用户名
      * @param value The value of 'username'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setUsername(java.lang.String value) {
      validate(fields()[0], value);
      this.username = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'username' field has been set.
      * 用户名
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'username' field.
      * 用户名
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearUsername() {
      username = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'token' field.
      * 令牌
      * @return The value.
      */
    public java.lang.String getToken() {
      return token;
    }

    /**
      * Sets the value of the 'token' field.
      * 令牌
      * @param value The value of 'token'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setToken(java.lang.String value) {
      validate(fields()[1], value);
      this.token = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'token' field has been set.
      * 令牌
      * @return True if the 'token' field has been set, false otherwise.
      */
    public boolean hasToken() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'token' field.
      * 令牌
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearToken() {
      token = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'client_ip' field.
      * 客户端ip
      * @return The value.
      */
    public java.lang.String getClientIp() {
      return client_ip;
    }

    /**
      * Sets the value of the 'client_ip' field.
      * 客户端ip
      * @param value The value of 'client_ip'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setClientIp(java.lang.String value) {
      validate(fields()[2], value);
      this.client_ip = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'client_ip' field has been set.
      * 客户端ip
      * @return True if the 'client_ip' field has been set, false otherwise.
      */
    public boolean hasClientIp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'client_ip' field.
      * 客户端ip
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearClientIp() {
      client_ip = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'family_name' field.
      * 姓名
      * @return The value.
      */
    public java.lang.String getFamilyName() {
      return family_name;
    }

    /**
      * Sets the value of the 'family_name' field.
      * 姓名
      * @param value The value of 'family_name'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setFamilyName(java.lang.String value) {
      validate(fields()[3], value);
      this.family_name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'family_name' field has been set.
      * 姓名
      * @return True if the 'family_name' field has been set, false otherwise.
      */
    public boolean hasFamilyName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'family_name' field.
      * 姓名
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearFamilyName() {
      family_name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'id_card' field.
      * 身份证
      * @return The value.
      */
    public java.lang.String getIdCard() {
      return id_card;
    }

    /**
      * Sets the value of the 'id_card' field.
      * 身份证
      * @param value The value of 'id_card'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setIdCard(java.lang.String value) {
      validate(fields()[4], value);
      this.id_card = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'id_card' field has been set.
      * 身份证
      * @return True if the 'id_card' field has been set, false otherwise.
      */
    public boolean hasIdCard() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'id_card' field.
      * 身份证
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearIdCard() {
      id_card = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobile' field.
      * 手机
      * @return The value.
      */
    public java.lang.String getMobile() {
      return mobile;
    }

    /**
      * Sets the value of the 'mobile' field.
      * 手机
      * @param value The value of 'mobile'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setMobile(java.lang.String value) {
      validate(fields()[5], value);
      this.mobile = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'mobile' field has been set.
      * 手机
      * @return True if the 'mobile' field has been set, false otherwise.
      */
    public boolean hasMobile() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'mobile' field.
      * 手机
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearMobile() {
      mobile = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * 邮箱
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * 邮箱
      * @param value The value of 'email'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setEmail(java.lang.String value) {
      validate(fields()[6], value);
      this.email = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * 邮箱
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'email' field.
      * 邮箱
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearEmail() {
      email = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'dept_name' field.
      * 部门
      * @return The value.
      */
    public java.lang.String getDeptName() {
      return dept_name;
    }

    /**
      * Sets the value of the 'dept_name' field.
      * 部门
      * @param value The value of 'dept_name'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setDeptName(java.lang.String value) {
      validate(fields()[7], value);
      this.dept_name = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'dept_name' field has been set.
      * 部门
      * @return True if the 'dept_name' field has been set, false otherwise.
      */
    public boolean hasDeptName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'dept_name' field.
      * 部门
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearDeptName() {
      dept_name = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'org_id' field.
      * 机构id
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return org_id;
    }

    /**
      * Sets the value of the 'org_id' field.
      * 机构id
      * @param value The value of 'org_id'.
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder setOrgId(java.lang.String value) {
      validate(fields()[8], value);
      this.org_id = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'org_id' field has been set.
      * 机构id
      * @return True if the 'org_id' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'org_id' field.
      * 机构id
      * @return This builder.
      */
    public io.bestpay.framework.base.User.Builder clearOrgId() {
      org_id = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public User build() {
      try {
        User record = new User();
        record.username = fieldSetFlags()[0] ? this.username : (java.lang.String) defaultValue(fields()[0]);
        record.token = fieldSetFlags()[1] ? this.token : (java.lang.String) defaultValue(fields()[1]);
        record.client_ip = fieldSetFlags()[2] ? this.client_ip : (java.lang.String) defaultValue(fields()[2]);
        record.family_name = fieldSetFlags()[3] ? this.family_name : (java.lang.String) defaultValue(fields()[3]);
        record.id_card = fieldSetFlags()[4] ? this.id_card : (java.lang.String) defaultValue(fields()[4]);
        record.mobile = fieldSetFlags()[5] ? this.mobile : (java.lang.String) defaultValue(fields()[5]);
        record.email = fieldSetFlags()[6] ? this.email : (java.lang.String) defaultValue(fields()[6]);
        record.dept_name = fieldSetFlags()[7] ? this.dept_name : (java.lang.String) defaultValue(fields()[7]);
        record.org_id = fieldSetFlags()[8] ? this.org_id : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
